{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","addValue","event","target","name","value","setState","clearForm","onAdd","this","props","onSubmit","preventDefault","htmlFor","type","id","onChange","required","Component","App","moviesFromServer","addMovie","prev","React","ReactDOM","render","document","getElementById"],"mappings":"oyEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,OCIfC,G,MAAb,4MACEC,MAAe,CACbd,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,IANZ,EASEG,SAAW,SAACC,GACV,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAACN,GAAD,mBAAC,eACVA,GADS,kBAEXI,EAAOC,QAdd,EAkBEE,UAAY,WACV,EAAKD,SAAS,CACZpB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,MAxBd,4CA4BE,WAAU,IAAD,OACCU,EAAUC,KAAKC,MAAfF,MAER,OACE,gCACE,2CACA,uBACElB,UAAU,OACVqB,SAAU,SAACT,GACTA,EAAMU,iBACNJ,EAAM,EAAKR,OACX,EAAKO,aALT,UAQE,sBAAKjB,UAAU,YAAf,UACE,uBAAOuB,QAAQ,QAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,QAAQX,KAAK,QAAQY,SAAUP,KAAKR,SAAUgB,UAAQ,OAE9E,sBAAK3B,UAAU,YAAf,UACE,uBAAOuB,QAAQ,cAAf,0BACA,0BAAUT,KAAK,cAAcW,GAAG,cAAcC,SAAUP,KAAKR,cAE/D,sBAAKX,UAAU,YAAf,UACE,uBAAOuB,QAAQ,SAAf,qBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASX,KAAK,SAASY,SAAUP,KAAKR,SAAUgB,UAAQ,OAEhF,sBAAK3B,UAAU,YAAf,UACE,uBAAOuB,QAAQ,UAAf,sBACA,uBAAOC,KAAK,OAAOC,GAAG,UAAUX,KAAK,UAAUY,SAAUP,KAAKR,SAAUgB,UAAQ,OAElF,sBAAK3B,UAAU,YAAf,UACE,uBAAOuB,QAAQ,SAAf,qBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASX,KAAK,SAASY,SAAUP,KAAKR,SAAUgB,UAAQ,OAEhF,wBAAQH,KAAK,SAAb,2BA9DV,GAA8BI,c,QCNjBC,EAAb,4MACEnB,MAAe,CACbL,OAAQyB,GAFZ,EAKEC,SAAW,SAACxB,GACV,EAAKS,UAAS,SAACgB,GACb,MAAO,CACL3B,OAAO,GAAD,mBAAM2B,EAAK3B,QAAX,CAAmBE,SARjC,4CAaE,WACE,IAAQF,EAAWc,KAAKT,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CACEkB,MAAOC,KAAKY,oBAvBxB,GAAyBE,IAAML,WCN/BM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.63647087.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  addValue = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  render() {\n    const { onAdd } = this.props;\n\n    return (\n      <div>\n        <h1>New Movie</h1>\n        <form\n          className=\"form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            onAdd(this.state);\n            this.clearForm();\n          }}\n        >\n          <div className=\"form_item\">\n            <label htmlFor=\"title\">Title:</label>\n            <input type=\"text\" id=\"title\" name=\"title\" onChange={this.addValue} required />\n          </div>\n          <div className=\"form_item\">\n            <label htmlFor=\"description\">Description:</label>\n            <textarea name=\"description\" id=\"description\" onChange={this.addValue} />\n          </div>\n          <div className=\"form_item\">\n            <label htmlFor=\"imgUrl\">imgUrl:</label>\n            <input type=\"text\" id=\"imgUrl\" name=\"imgUrl\" onChange={this.addValue} required />\n          </div>\n          <div className=\"form_item\">\n            <label htmlFor=\"imdbUrl\">imdbUrl:</label>\n            <input type=\"text\" id=\"imdbUrl\" name=\"imdbUrl\" onChange={this.addValue} required />\n          </div>\n          <div className=\"form_item\">\n            <label htmlFor=\"imdbId\">imdbId:</label>\n            <input type=\"text\" id=\"imdbId\" name=\"imdbId\" onChange={this.addValue} required />\n          </div>\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((prev) => {\n      return {\n        movies: [...prev.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}